rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      // This rule allows anyone with your database reference to view, edit,
      // and delete all data in your database. It is useful for getting
      // started, but it is configured to expire after 30 days because it
      // leaves your app open to attackers. At that time, all client
      // requests to your database will be denied.
      //
      // Make sure to write security rules for your app before that time, or
      // else all client requests to your database will be denied until you
      // update your rules.
      allow read, write: if request.time < timestamp.date(2025, 9, 28);
    }
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Tasks collection
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      
      // Parent can update/verify tasks they created
      allow create, update, delete: if request.auth != null &&
        request.resource.data.parentId == request.auth.uid;

      // Child can only update status to "pending_verification"
     allow update: if request.auth != null &&
        request.resource.data.childId == request.auth.uid &&
        request.resource.data.keys().hasOnly(['status', 'completedAt', 'note']);
    
      // Everyone involved can read
      allow read: if request.auth != null 
        && (resource.data.parentId == request.auth.uid 
         || resource.data.childId == request.auth.uid);
    }

    // Streak collection
    match /streaks/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
  }
}
